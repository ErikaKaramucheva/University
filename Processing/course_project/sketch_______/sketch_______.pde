int[][] pattern1 = {
  {1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1},
  {0, 1, 1, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 1, 1, 0},
  {1, 1, 1, 0, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 0, 1, 1, 1},
  {0, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 1, 0, 0, 0},
  {0, 2, 2, 0, 1, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 2, 2, 0},
  {2, 2, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 1, 0, 2, 2, 2, 2},
  {0, 2, 2, 0, 0, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 0, 0, 2, 2, 0},
  {0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0},
  {0, 0, 2, 2, 2, 2, 2, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 2, 2, 0, 0},
  {0, 2, 2, 0, 0, 2, 2, 2, 2, 0, 1, 0, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 2, 2, 0},
  {0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 2, 0, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 0, 2, 0},
  {0, 2, 0, 2, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 0, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 2, 0, 2, 0},
  {0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0},
  {0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 0, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 2, 0, 2, 0},
  {0, 2, 0, 2, 0, 0, 2, 2, 2, 2, 0, 1, 0, 2, 0, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 0, 2, 0},
  {0, 2, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 2, 0},
  {0, 2, 2, 0, 0, 2, 2, 2, 0, 1, 0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 2, 2, 0, 0},
  {0, 0, 2, 2, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0},
  {0, 0, 0, 2, 2, 2, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0},
  {0, 2, 2, 0, 0, 0, 1, 0, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 0, 0, 2, 2, 0},
  {2, 2, 2, 2, 0, 1, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 1, 0, 2, 2, 2, 2},
  {0, 2, 2, 0, 1, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 2, 2, 0},
  {0, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 1, 0, 0, 0},
  {1, 1, 1, 0, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 0, 1, 1, 1},
  {0, 1, 1, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 0, 1, 1, 0},
  {1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1}

};

void setup() {
  size(600, 600);
  background(255);
}

void draw() {
  int x=0;
  int y=0;
  for (int j=0;j<=height;j+=150){   
  for (int i=0; i<=width; i+=150) 
    {
      drawCombinedPattern(x+i, y, 150);
    
  }
  y+=150; //j- пропуска 1 ред
  }
}

void drawCombinedPattern(int x, int y, int size) {
  int cellSize = size / pattern1.length;

  for (int i = 0; i < pattern1.length; i++) {
    for (int j = 0; j < pattern1[i].length; j++) {
      if (pattern1[i][j] == 1) {
        fill(0);
      } else if (pattern1[i][j]==2) {
        fill(255, 0, 0);
      } else {
        fill(255);
      }
      rect(x + j * cellSize, y + i * cellSize, cellSize, cellSize);
    }
  }
}

void mouseClicked() {
  saveFrame("shevitsa_#####.png");
}
